package com.qiu.shu.busline.service;

import com.qiu.shu.busline.Util.CalulateTwoLanLon;
import com.qiu.shu.busline.Util.DealCoordUtil;
import com.qiu.shu.busline.Util.DealNeighbourUtil;
import com.qiu.shu.busline.dao.NeighbourhoodDao;
import com.qiu.shu.busline.dao.StationValidDao;
import com.qiu.shu.busline.domain.Neighbourhood;
import com.qiu.shu.busline.domain.Station;

import java.util.ArrayList;
import java.util.List;

public class NeighbourhoodService {

//    public static void main(String[] args) {
//        int measure = 500;
//        //String str = "[[31.29672,121.321794],[31.292049,121.314194],[31.29672,121.321794],[31.292049,121.314194]]";
//        DealNeighbourUtil util = new DealNeighbourUtil();
//        DealCoordUtil util2 = new DealCoordUtil();
//        NeighbourhoodDao neighbourhoodDao = new NeighbourhoodDao();
//        StationValidDao stationValidDao = new StationValidDao();
//        CalulateTwoLanLon calulateTwoLanLon = new CalulateTwoLanLon();
//
//        ArrayList<String> stations = stationValidDao.queryAllValidStation();
//        int stationsSize = stations.size();
//
//        //System.out.println(stations);
//        //[[31.286407,121.309349], [31.344614,121.205505], [31.280403,121.166748], [31.287821,121.163368], [31.289852,121.163368], [31.410343,121.193398], [31.396671,121.215431], [31.29385,121.316162], [31.298737,121.309769], [31.296879,121.307571], [31.292439,121.312935], [31.290859,121.319687], [31.291246,121.323524], [31.288311,121.325607], [31.285894,121.316383], [31.281913,121.31061], [31.294592,121.322945], [31.238251,121.317673], [31.239302,121.311821], [31.241034,121.31855], [31.241932,121.328117], [31.246819,121.333084], [31.252266,121.338753], [31.255009,121.342758], [31.261797,121.347267], [31.257843,121.345993], [31.265656,121.348038], [31.267635,121.343979], [31.266792,121.340279], [31.238574,121.320912], [31.267384,121.33757], [31.268864,121.313019], [31.269814,121.309998], [31.283199,121.311905], [31.288589,121.319801], [31.298393,121.32592], [31.301233,121.325737], [31.304895,121.322983], [31.308542,121.320274], [31.314306,121.318413], [31.312361,121.32016], [31.327148,121.328209], [31.328394,121.333656], [31.33033,121.339111], [31.322197,121.33651], [31.296835,121.32225], [31.291285,121.30481], [31.292631,121.308212], [31.292543,121.31012], [31.288801,121.305786], [31.291056,121.329704], [31.405729,121.254662], [31.399153,121.253395], [31.398319,121.251221], [31.403025,121.250839], [31.402742,121.247459], [31.394682,121.243454], [31.391388,121.238014], [31.235647,121.312653], [31.244444,121.307358], [31.245665,121.312675], [31.246588,121.318176], [31.245096,121.320358], [31.242973,121.320381], [31.308559,121.24736], [31.309149,121.264893], [31.307482,121.259323], [31.30514,121.246826], [31.313589,121.244728], [31.314022,121.23777], [31.319027,121.216995], [31.325668,121.209564], [31.322569,121.204758], [31.321466,121.202484], [31.31983,121.199265], [31.321949,121.195663], [31.320673,121.19265], [31.31753,121.191559], [31.314402,121.193321], [31.308369,121.195091], [31.3074,121.191299], [31.312426,121.188118], [31.312704,121.186615], [31.309761,121.168732], [31.300304,121.163094], [31.307087,121.254898], [31.302027,121.249626], [31.299519,121.246384], [31.294665,121.20084], [31.29533,121.191978], [31.295235,121.187622], [31.295259,121.179535], [31.295256,121.176804], [31.298964,121.175842], [31.301289,121.1744], [31.301281,121.168869], [31.295898,121.168869], [31.295248,121.165276], [31.298447,121.156792], [31.299219,121.153976], [31.302656,121.152519], [31.30599,121.152824], [31.29188,121.303925], [31.318129,121.228416], [31.259991,121.320778], [31.272356,121.211761], [31.262283,121.2174], [31.262674,121.208961], [31.281992,121.173889], [31.293312,121.156967], [31.301508,121.14998], [31.288323,121.160263], [31.291519,121.161903], [31.309305,121.150688], [31.314667,121.16629], [31.323668,121.165459], [31.328064,121.173523], [31.329884,121.178955], [31.333324,121.189461], [31.35181,121.213905], [31.363842,121.227394], [31.366617,121.231285], [31.372448,121.238853], [31.37499,121.241737], [31.379107,121.247139], [31.381336,121.248474], [31.384708,121.245964], [31.386576,121.240753], [31.392714,121.236282], [31.295235,121.157257], [31.305981,121.161118], [31.318954,121.166924], [31.323212,121.169296], [31.326225,121.178535], [31.327726,121.184265], [31.32411,121.187866], [31.324232,121.19239], [31.325998,121.194862], [31.331142,121.193626], [31.333208,121.19828], [31.329153,121.202118], [31.324024,121.205513], [31.328793,121.21479], [31.329769,121.226128], [31.278763,121.218933], [31.280989,121.16465], [31.266397,121.22583], [31.268698,121.225677], [31.267395,121.216927], [31.267542,121.215141], [31.287249,121.226166], [31.286459,121.237946], [31.284853,121.245537], [31.290131,121.316208], [31.405592,121.254662], [31.396988,121.241074], [31.387365,121.266228], [31.38479,121.267212], [31.382395,121.270775], [31.379883,121.23922], [31.407644,121.258072], [31.404831,121.258179], [31.399517,121.255974], [31.331441,121.254098], [31.334667,121.257011], [31.334404,121.249641], [31.33691,121.248177], [31.35132,121.258781], [31.333294,121.256882], [31.331102,121.262878], [31.329395,121.258308], [31.34672,121.246109], [31.374813,121.233398], [31.399063,121.257797], [31.401772,121.258125], [31.389536,121.219353], [31.403477,121.263924], [31.404076,121.269592], [31.40462,121.273716], [31.383278,121.273918], [31.399036,121.20275], [31.40214,121.199898], [31.40624,121.197395], [31.40806,121.19593], [31.443594,121.27594], [31.424341,121.276001], [31.392939,121.263855], [31.383938,121.276268], [31.417509,121.254776], [31.432781,121.251114], [31.436737,121.250214], [31.322231,121.322327], [31.277586,121.246399], [31.390024,121.2383], [31.241163,121.325798], [31.26289,121.248512], [31.37628,121.225128], [31.313814,121.157394], [31.296133,121.303894], [31.236883,121.310852], [31.325607,121.340897], [31.324545,121.328339], [31.307526,121.254227], [31.403116,121.260406], [31.274006,121.238228], [31.274588,121.243904], [31.275169,121.250015], [31.273315,121.231262], [31.285994,121.185936], [31.287769,121.176567], [31.285337,121.197914], [31.386215,121.225769], [31.286016,121.322136], [31.435308,121.276443], [31.285105,121.206665], [31.280083,121.211456], [31.416288,121.281624], [31.394215,121.236214], [31.256575,121.199356], [31.260212,121.204971], [31.420752,121.254044], [31.428003,121.252014], [31.405014,121.247025], [31.443495,121.169159], [31.436996,121.171265], [31.42425,121.181129], [31.27846,121.207344], [31.269381,121.206032], [31.270365,121.251297], [31.276184,121.205299], [31.267609,121.217285], [31.275187,121.258385], [31.28307,121.175461], [31.270851,121.219025], [31.286776,121.181442], [31.272526,121.257034], [31.287365,121.175659], [31.432686,121.173973], [31.43878,121.258354], [31.440865,121.264793], [31.437517,121.250816], [31.269987,121.327553], [31.268368,121.332176], [31.390045,121.235245], [31.398781,121.248314], [31.429224,121.276596], [31.413784,121.278488], [31.418633,121.281319], [31.419115,121.278076], [31.418993,121.285058], [31.407574,121.27861], [31.345501,121.240471], [31.310369,121.316422], [31.312925,121.315643], [31.384228,121.227798], [31.232908,121.313751], [31.232912,121.32], [31.238132,121.332771], [31.233368,121.329521], [31.255278,121.318146], [31.401459,121.250366], [31.295656,121.31208], [31.296055,121.316277], [31.379236,121.225258], [31.349987,121.254028], [31.284315,121.319511], [31.284925,121.31488], [31.268772,121.319611], [31.284914,121.315613], [31.400217,121.195015], [31.404593,121.194931], [31.396702,121.199615], [31.401711,121.208488], [31.351402,121.257179], [31.332983,121.267166], [31.337582,121.268501], [31.344227,121.263069], [31.380978,121.219841], [31.383369,121.225533], [31.385547,121.282066], [31.42425,121.253006], [31.309006,121.203232], [31.309071,121.202866], [31.312731,121.214996], [31.326849,121.218124], [31.31138,121.218178], [31.320217,121.225014], [31.323872,121.220901], [31.310564,121.200294], [31.308603,121.20594], [31.310915,121.211861], [31.325222,121.174652], [31.309196,121.175385], [31.339657,121.246498], [31.343943,121.243896], [31.268229,121.31443], [31.416557,121.187515], [31.318502,121.165901], [31.321817,121.165604], [31.378188,121.211457], [31.383484,121.219398], [31.384298,121.217201], [31.392,121.20771], [31.369125,121.225479], [31.38419,121.215271], [31.374098,121.221794], [31.390387,121.228897], [31.328125,121.254807], [31.311132,121.143509], [31.304749,121.137131], [31.308815,121.138062], [31.265707,121.320641], [31.37973,121.21685], [31.379276,121.215988], [31.397673,121.261581], [31.270868,121.316238], [31.306002,121.157463], [31.290503,121.309555]]
//
//        List<Neighbourhood> neighbourhoods = neighbourhoodDao.queryAllNeighbourhood();
//        int nsize = neighbourhoods.size();
//        for(int i=0;i<nsize;i++){
//            Neighbourhood nb =(Neighbourhood)neighbourhoods.get(i);
//            List<Float> loc = util.locationIntoFloatList(nb.getLocation());
//            nb.setNumber(0);
//            for(int j=0;j<stationsSize;j++){
//                String station = (String)stations.get(j);
//                List<Double> stationLoc = util2.changeIntoDoubleList(station);
//                double dis = calulateTwoLanLon.getDistance(stationLoc.get(0),stationLoc.get(1),loc.get(0),loc.get(1));
//                if(dis<=measure){
//                    nb.setNumber(nb.getNumber()+1);
//                }
//                //System.out.println(stationLoc.get(0)+" " +stationLoc.get(1));
//            }
//            System.out.println(nb.getNumber());
//           // System.out.println(loc.get(0)+" " +loc.get(1));
//        }
//        //System.out.println(neighbourhoods);
//    }



    public static List<Neighbourhood> queryCoverage(int measure){
        DealNeighbourUtil util = new DealNeighbourUtil();
        DealCoordUtil util2 = new DealCoordUtil();
        NeighbourhoodDao neighbourhoodDao = new NeighbourhoodDao();
        StationValidDao stationValidDao = new StationValidDao();
        CalulateTwoLanLon calulateTwoLanLon = new CalulateTwoLanLon();

        //ArrayList<String> stations = stationValidDao.queryAllValidStation();
        List<Station> stations = stationValidDao.queryAllValidStation();
        int stationsSize = stations.size();
        //System.out.println(stations);
        //[[31.286407,121.309349], [31.344614,121.205505], [31.280403,121.166748], [31.287821,121.163368], [31.289852,121.163368], [31.410343,121.193398], [31.396671,121.215431], [31.29385,121.316162], [31.298737,121.309769], [31.296879,121.307571], [31.292439,121.312935], [31.290859,121.319687], [31.291246,121.323524], [31.288311,121.325607], [31.285894,121.316383], [31.281913,121.31061], [31.294592,121.322945], [31.238251,121.317673], [31.239302,121.311821], [31.241034,121.31855], [31.241932,121.328117], [31.246819,121.333084], [31.252266,121.338753], [31.255009,121.342758], [31.261797,121.347267], [31.257843,121.345993], [31.265656,121.348038], [31.267635,121.343979], [31.266792,121.340279], [31.238574,121.320912], [31.267384,121.33757], [31.268864,121.313019], [31.269814,121.309998], [31.283199,121.311905], [31.288589,121.319801], [31.298393,121.32592], [31.301233,121.325737], [31.304895,121.322983], [31.308542,121.320274], [31.314306,121.318413], [31.312361,121.32016], [31.327148,121.328209], [31.328394,121.333656], [31.33033,121.339111], [31.322197,121.33651], [31.296835,121.32225], [31.291285,121.30481], [31.292631,121.308212], [31.292543,121.31012], [31.288801,121.305786], [31.291056,121.329704], [31.405729,121.254662], [31.399153,121.253395], [31.398319,121.251221], [31.403025,121.250839], [31.402742,121.247459], [31.394682,121.243454], [31.391388,121.238014], [31.235647,121.312653], [31.244444,121.307358], [31.245665,121.312675], [31.246588,121.318176], [31.245096,121.320358], [31.242973,121.320381], [31.308559,121.24736], [31.309149,121.264893], [31.307482,121.259323], [31.30514,121.246826], [31.313589,121.244728], [31.314022,121.23777], [31.319027,121.216995], [31.325668,121.209564], [31.322569,121.204758], [31.321466,121.202484], [31.31983,121.199265], [31.321949,121.195663], [31.320673,121.19265], [31.31753,121.191559], [31.314402,121.193321], [31.308369,121.195091], [31.3074,121.191299], [31.312426,121.188118], [31.312704,121.186615], [31.309761,121.168732], [31.300304,121.163094], [31.307087,121.254898], [31.302027,121.249626], [31.299519,121.246384], [31.294665,121.20084], [31.29533,121.191978], [31.295235,121.187622], [31.295259,121.179535], [31.295256,121.176804], [31.298964,121.175842], [31.301289,121.1744], [31.301281,121.168869], [31.295898,121.168869], [31.295248,121.165276], [31.298447,121.156792], [31.299219,121.153976], [31.302656,121.152519], [31.30599,121.152824], [31.29188,121.303925], [31.318129,121.228416], [31.259991,121.320778], [31.272356,121.211761], [31.262283,121.2174], [31.262674,121.208961], [31.281992,121.173889], [31.293312,121.156967], [31.301508,121.14998], [31.288323,121.160263], [31.291519,121.161903], [31.309305,121.150688], [31.314667,121.16629], [31.323668,121.165459], [31.328064,121.173523], [31.329884,121.178955], [31.333324,121.189461], [31.35181,121.213905], [31.363842,121.227394], [31.366617,121.231285], [31.372448,121.238853], [31.37499,121.241737], [31.379107,121.247139], [31.381336,121.248474], [31.384708,121.245964], [31.386576,121.240753], [31.392714,121.236282], [31.295235,121.157257], [31.305981,121.161118], [31.318954,121.166924], [31.323212,121.169296], [31.326225,121.178535], [31.327726,121.184265], [31.32411,121.187866], [31.324232,121.19239], [31.325998,121.194862], [31.331142,121.193626], [31.333208,121.19828], [31.329153,121.202118], [31.324024,121.205513], [31.328793,121.21479], [31.329769,121.226128], [31.278763,121.218933], [31.280989,121.16465], [31.266397,121.22583], [31.268698,121.225677], [31.267395,121.216927], [31.267542,121.215141], [31.287249,121.226166], [31.286459,121.237946], [31.284853,121.245537], [31.290131,121.316208], [31.405592,121.254662], [31.396988,121.241074], [31.387365,121.266228], [31.38479,121.267212], [31.382395,121.270775], [31.379883,121.23922], [31.407644,121.258072], [31.404831,121.258179], [31.399517,121.255974], [31.331441,121.254098], [31.334667,121.257011], [31.334404,121.249641], [31.33691,121.248177], [31.35132,121.258781], [31.333294,121.256882], [31.331102,121.262878], [31.329395,121.258308], [31.34672,121.246109], [31.374813,121.233398], [31.399063,121.257797], [31.401772,121.258125], [31.389536,121.219353], [31.403477,121.263924], [31.404076,121.269592], [31.40462,121.273716], [31.383278,121.273918], [31.399036,121.20275], [31.40214,121.199898], [31.40624,121.197395], [31.40806,121.19593], [31.443594,121.27594], [31.424341,121.276001], [31.392939,121.263855], [31.383938,121.276268], [31.417509,121.254776], [31.432781,121.251114], [31.436737,121.250214], [31.322231,121.322327], [31.277586,121.246399], [31.390024,121.2383], [31.241163,121.325798], [31.26289,121.248512], [31.37628,121.225128], [31.313814,121.157394], [31.296133,121.303894], [31.236883,121.310852], [31.325607,121.340897], [31.324545,121.328339], [31.307526,121.254227], [31.403116,121.260406], [31.274006,121.238228], [31.274588,121.243904], [31.275169,121.250015], [31.273315,121.231262], [31.285994,121.185936], [31.287769,121.176567], [31.285337,121.197914], [31.386215,121.225769], [31.286016,121.322136], [31.435308,121.276443], [31.285105,121.206665], [31.280083,121.211456], [31.416288,121.281624], [31.394215,121.236214], [31.256575,121.199356], [31.260212,121.204971], [31.420752,121.254044], [31.428003,121.252014], [31.405014,121.247025], [31.443495,121.169159], [31.436996,121.171265], [31.42425,121.181129], [31.27846,121.207344], [31.269381,121.206032], [31.270365,121.251297], [31.276184,121.205299], [31.267609,121.217285], [31.275187,121.258385], [31.28307,121.175461], [31.270851,121.219025], [31.286776,121.181442], [31.272526,121.257034], [31.287365,121.175659], [31.432686,121.173973], [31.43878,121.258354], [31.440865,121.264793], [31.437517,121.250816], [31.269987,121.327553], [31.268368,121.332176], [31.390045,121.235245], [31.398781,121.248314], [31.429224,121.276596], [31.413784,121.278488], [31.418633,121.281319], [31.419115,121.278076], [31.418993,121.285058], [31.407574,121.27861], [31.345501,121.240471], [31.310369,121.316422], [31.312925,121.315643], [31.384228,121.227798], [31.232908,121.313751], [31.232912,121.32], [31.238132,121.332771], [31.233368,121.329521], [31.255278,121.318146], [31.401459,121.250366], [31.295656,121.31208], [31.296055,121.316277], [31.379236,121.225258], [31.349987,121.254028], [31.284315,121.319511], [31.284925,121.31488], [31.268772,121.319611], [31.284914,121.315613], [31.400217,121.195015], [31.404593,121.194931], [31.396702,121.199615], [31.401711,121.208488], [31.351402,121.257179], [31.332983,121.267166], [31.337582,121.268501], [31.344227,121.263069], [31.380978,121.219841], [31.383369,121.225533], [31.385547,121.282066], [31.42425,121.253006], [31.309006,121.203232], [31.309071,121.202866], [31.312731,121.214996], [31.326849,121.218124], [31.31138,121.218178], [31.320217,121.225014], [31.323872,121.220901], [31.310564,121.200294], [31.308603,121.20594], [31.310915,121.211861], [31.325222,121.174652], [31.309196,121.175385], [31.339657,121.246498], [31.343943,121.243896], [31.268229,121.31443], [31.416557,121.187515], [31.318502,121.165901], [31.321817,121.165604], [31.378188,121.211457], [31.383484,121.219398], [31.384298,121.217201], [31.392,121.20771], [31.369125,121.225479], [31.38419,121.215271], [31.374098,121.221794], [31.390387,121.228897], [31.328125,121.254807], [31.311132,121.143509], [31.304749,121.137131], [31.308815,121.138062], [31.265707,121.320641], [31.37973,121.21685], [31.379276,121.215988], [31.397673,121.261581], [31.270868,121.316238], [31.306002,121.157463], [31.290503,121.309555]]
        List<Neighbourhood> neighbourhoods = neighbourhoodDao.queryAllNeighbourhood();
        int nsize = neighbourhoods.size();
        for(int i=0;i<nsize;i++){
            Neighbourhood nb =neighbourhoods.get(i);
            List<Float> loc = util.locationIntoFloatList(nb.getLocation());
            nb.setNumber(0);
            for(int j=0;j<stationsSize;j++){
                //String station = stations.get(j);
                Station station  = stations.get(j);
                List<Double> stationLoc = util2.changeIntoDoubleList(station.getLocation());
                double dis = calulateTwoLanLon.getDistance(stationLoc.get(0),stationLoc.get(1),loc.get(0),loc.get(1));
                if(dis<=measure){
                    nb.setNumber(nb.getNumber()+1);
                }
                //System.out.println(stationLoc.get(0)+" " +stationLoc.get(1));
            }
            System.out.println(nb.getNeighborhoodName()+" "+ nb.getNumber());
            // System.out.println(loc.get(0)+" " +loc.get(1));
        }
        //System.out.println(neighbourhoods);
        return neighbourhoods;
    }

    //返回所有有效的居民区
    public static List<Neighbourhood> queryAllNeighbor(){
        NeighbourhoodDao neighbourhoodDao = new NeighbourhoodDao();
        return neighbourhoodDao.queryAllNeighbourhood();
    }

    public static Neighbourhood queryCoverageByID(String id,int measure){
        NeighbourhoodDao neighbourhoodDao = new NeighbourhoodDao();
        StationValidDao stationValidDao = new StationValidDao();
        DealNeighbourUtil util = new DealNeighbourUtil();
        DealCoordUtil util2 = new DealCoordUtil();

        List<Station> stations = stationValidDao.queryAllValidStation();
        int stationsSize = stations.size();

        Neighbourhood neighbourhood = neighbourhoodDao.queryByID(id);

        List<Float> loc = util.locationIntoFloatList(neighbourhood.getLocation());
        neighbourhood.setNumber(0);
        for(int j=0;j<stationsSize;j++){
            Station station  = stations.get(j);
            List<Double> stationLoc = util2.changeIntoDoubleList(station.getLocation());
            double dis = CalulateTwoLanLon.getDistance(stationLoc.get(0),stationLoc.get(1),loc.get(0),loc.get(1));
            if(dis<=measure){
                neighbourhood.setNumber(neighbourhood.getNumber()+1);
            }
        }
        return neighbourhood;
    }
}
